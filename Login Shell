raymond@Rays-Mac Launch_School % ruby test.rb                              
ruby: No such file or directory -- test.rb (LoadError)
raymond@Rays-Mac Launch_School % cd Launch_School                          
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb:16:in `<main>': undefined local variable or method `ist' for main:O​‌​
bject (NameError)

ist == [4, 3, 2, 1] # true
^^^
Did you mean?  list
raymond@Rays-Mac Launch_School % ruby test.rb                              
raymond@Rays-Mac Launch_School % ruby test.rb                              
false
true
raymond@Rays-Mac Launch_School % ruby test.rb                              
true
true
raymond@Rays-Mac Launch_School % ruby test.rb                              
false
true
raymond@Rays-Mac Launch_School % ruby test.rb                              
nil
true
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb:4:in `reverse': undefined method `time' for 4:Integer (NoMethodErro​‌​
r)

arr.size.time do 
        ^^^^^
Did you mean?  times
        from test.rb:12:in `<main>'
raymond@Rays-Mac Launch_School % ruby test.rb                              
raymond@Rays-Mac Launch_School % ruby test.rb                              
[4, 1, 2, 3]
["c", "a", "b", "e", "d"]
["abc"]
[]
[2, 1, 3]
raymond@Rays-Mac Launch_School % ruby test.rb                              
[4, 1, 2, 3]
false
["c", "a", "b", "e", "d"]
false
["abc"]
true
[]
true
[1, 3, 2]
[2, 1, 3]
[2, 1, 3]
true
true
false
raymond@Rays-Mac Launch_School % ruby test.rb                              
[1, 2, 3, 4]
false
["a", "b", "e", "d", "c"]
false
["abc"]
true
[]
true
[1, 3, 2]
[1, 3, 2]
[1, 3, 2]
true
true
false
raymond@Rays-Mac Launch_School % ruby test.rb                              
[3, 4, 1, 2]
false
["d", "c", "a", "b", "e"]
false
[nil]
false
[]
true
[1, 3, 2]
[3, 2, 1]
[3, 2, 1]
true
true
false
raymond@Rays-Mac Launch_School % ruby test.rb                              
[2, 3, 4, 1]
false
["e", "d", "c", "a", "b"]
false
[nil]
false
[]
true
[1, 3, 2]
[1, 3, 2]
[1, 3, 2]
true
true
false
raymond@Rays-Mac Launch_School % ruby test.rb                              
[1, 2, 3, 4]
false
["b", "e", "d", "c", "a"]
false
[nil]
false
[]
true
[1, 3, 2]
[nil, 1, 3]
[nil, 1, 3]
true
true
false
raymond@Rays-Mac Launch_School % ruby test.rb                              
[1, 2, 3, 4]
false
["a", "b", "e", "d", "c"]
false
["abc"]
true
[]
true
[1, 3, 2]
[1, 3, 2]
[1, 3, 2]
true
true
false
raymond@Rays-Mac Launch_School % ruby test.rb                              
[3, 4, 1, 2]
false
["d", "c", "a", "b", "e"]
false
[nil]
false
[]
true
[1, 3, 2]
[3, 2, 1]
[3, 2, 1]
true
true
false
raymond@Rays-Mac Launch_School % ruby test.rb                              
[4, 1, 2, 3]
false
["c", "a", "b", "e", "d"]
false
["abc"]
true
[]
true
[1, 3, 2]
[2, 1, 3]
[2, 1, 3]
true
true
false
raymond@Rays-Mac Launch_School % ruby test.rb                              
[1, 4, 3, 2]
false
["a", "c", "d", "e", "b"]
false
["abc"]
true
[]
true
[1, 3, 2]
[1, 2, 3]
[1, 2, 3]
true
true
false
raymond@Rays-Mac Launch_School % ruby test.rb                              
[4, 3, 2, 1]
true
["c", "d", "e", "b", "a"]
true
["abc"]
true
[]
true
[1, 3, 2]
[2, 3, 1]
[2, 3, 1]
true
true
true
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb:10:in `block in <main>': undefined method `push' for {"demo"=>["dem​‌​
o"], "enno"=>["none"], "deit"=>["tied"], "eilv"=>["evil"]}:Hash (NoMethodEr​‌​
ror)

  word_hash.push(word)
           ^^^^^
        from test.rb:7:in `each'
        from test.rb:7:in `<main>'
raymond@Rays-Mac Launch_School % ruby test.rb                              
----------
["demo", "dome", "mode"]
----------
["none", "neon"]
----------
["tied", "diet", "edit", "tide"]
----------
["evil", "live", "veil", "vile"]
----------
["fowl", "wolf", "flow"]
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb:2:in `twice': undefined method `/' for "37":String (NoMethodError)

left_side = (integer.to_s / 2) - 1
                          ^
        from test.rb:7:in `<main>'
raymond@Rays-Mac Launch_School % ruby test.rb                              
raymond@Rays-Mac Launch_School % ruby test.rb                              
0
0
2
0
0
2
1
1
8
-1
raymond@Rays-Mac Launch_School % ruby test.rb                              
raymond@Rays-Mac Launch_School % ruby test.rb                              
1
1
3
1
1
3
2
2
9
0
raymond@Rays-Mac Launch_School % ruby test.rb                              
0
0
0
0
1
1
1
1
1
1
raymond@Rays-Mac Launch_School % ruby test.rb                              
37
44
334433
444
1
1
1
0
1
1
raymond@Rays-Mac Launch_School % ruby test.rb                              
1
0
1
0
3
3
1
0
1
1
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb:3:in `twice': undefined method `integer' for main:Object (NoMethodE​‌​
rror)

left_side = integer(0..center)
            ^^^^^^^
Did you mean?  Integer
        from test.rb:11:in `<main>'
raymond@Rays-Mac Launch_School % ruby test.rb                              
1
0
1
0
3
15
5
4
789
1
raymond@Rays-Mac Launch_School % ruby test.rb                              
1
0
1
0
1
7
1
0
277
5
raymond@Rays-Mac Launch_School % ruby test.rb                              
1
1
1
0
3
1
1
0
1
3
3
15
2
5
2
4
9
789
0
1
raymond@Rays-Mac Launch_School % ruby test.rb                              
1
1
3
1
1
3
2
2
9
0
raymond@Rays-Mac Launch_School % ruby test.rb                              
1
1
3
1
1
3
2
2
9
0
raymond@Rays-Mac Launch_School % ruby test.rb                              
1
0
1
0
1
7
1
0
277
5
raymond@Rays-Mac Launch_School % ruby test.rb                              
"3"
"4"
"334"
"4"
"1"
"103"
"33"
"76"
"123456789"
"5"
raymond@Rays-Mac Launch_School % ruby test.rb                              
raymond@Rays-Mac Launch_School % ruby test.rb                              
true
true
raymond@Rays-Mac Launch_School % ruby test.rb                              
true
true
true
true
true
true
true
true
true
false
raymond@Rays-Mac Launch_School % ruby test.rb                              
"5"
"5"
false
raymond@Rays-Mac Launch_School % ruby test.rb                              
""
"5"
true
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb: --> test.rb
Unmatched `end', missing keyword (`do', `def`, `if`, etc.) ?
> 1  def rotate_array(arr_to_rotate)
> 2  new_arr = []
> 3  array_size = arr_to_rotate.size
> 4  array_size.times { |index| new_arr << array_size[-arr_size + index]   ​‌​
}
> 5  end
> 6  end

test.rb:6: syntax error, unexpected `end' (SyntaxError)
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb:4:in `block in rotate_array': undefined local variable or method `a​‌​
rr_size' for main:Object (NameError)

array_size.times { |index| new_arr << array_size[-arr_size + index]   }
                                                  ^^^^^^^^
Did you mean?  array_size
        from test.rb:4:in `times'
        from test.rb:4:in `rotate_array'
        from test.rb:8:in `<main>'
raymond@Rays-Mac Launch_School % ruby test.rb                              
raymond@Rays-Mac Launch_School % ruby test.rb                              
[7, nil, nil, nil, nil, nil]
["a", nil, nil]
["a"]
[1, nil, nil, nil]
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb:4:in `block in rotate_array': undefined local variable or method `a​‌​
rr_size' for main:Object (NameError)

array_size.times { |index| new_arr << arr_to_rotate[-arr_size]}
                                                     ^^^^^^^^
Did you mean?  array_size
        from test.rb:4:in `times'
        from test.rb:4:in `rotate_array'
        from test.rb:9:in `<main>'
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb:4:in `block in rotate_array': undefined local variable or method `a​‌​
rr_size' for main:Object (NameError)

array_size.times { |index| new_arr << arr_to_rotate[-arr_size + 1]}
                                                     ^^^^^^^^
Did you mean?  array_size
        from test.rb:4:in `times'
        from test.rb:4:in `rotate_array'
        from test.rb:9:in `<main>'
raymond@Rays-Mac Launch_School % ruby test.rb                              
[7, 3, 5, 2, 9, 1]
["a", "b", "c"]
["a"]
[1, 2, 3, 4]
raymond@Rays-Mac Launch_School % ruby test.rb                              
[7, nil, nil, nil, nil, nil]
["a", nil, nil]
["a"]
[1, nil, nil, nil]
raymond@Rays-Mac Launch_School % ruby test.rb                              
[7, 3, 5, 2, 9, 1]
["a", "b", "c"]
["a"]
[1, 2, 3, 4]
raymond@Rays-Mac Launch_School % ruby test.rb                              
[nil, 7, 3, 5, 2, 9]
[nil, "a", "b"]
[nil]
[nil, 1, 2, 3]
raymond@Rays-Mac Launch_School % ruby test.rb                              
[nil, 1, 9, 2, 5, 3]
[nil, "c", "b"]
[nil]
[nil, 4, 3, 2]
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb:5:in `block in rotate_array': undefined local variable or method `r​‌​
otated_array' for main:Object (NameError)

rotated_array[-idx] << arr_to_rotate[idx]
^^^^^^^^^^^^^
Did you mean?  rotate_array
               rotated_arr
        from test.rb:4:in `each'
        from test.rb:4:in `each_with_index'
        from test.rb:4:in `rotate_array'
        from test.rb:20:in `<main>'
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb:8:in `block in rotate_array': undefined local variable or method `r​‌​
otated_array' for main:Object (NameError)

rotated_array[-idx] << arr_to_rotate[idx]
^^^^^^^^^^^^^
Did you mean?  rotate_array
               rotated_arr
        from test.rb:7:in `each'
        from test.rb:7:in `each_with_index'
        from test.rb:7:in `rotate_array'
        from test.rb:23:in `<main>'
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb:8:in `block in rotate_array': undefined local variable or method `r​‌​
otated_array' for main:Object (NameError)

rotated_array[-idx + 1] << arr_to_rotate[idx]
^^^^^^^^^^^^^
Did you mean?  rotate_array
               rotated_arr
        from test.rb:7:in `each'
        from test.rb:7:in `each_with_index'
        from test.rb:7:in `rotate_array'
        from test.rb:23:in `<main>'
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb:9:in `block in rotate_array': undefined local variable or method `r​‌​
otated_array' for main:Object (NameError)

rotated_array[-1] << arr_to_rotate[idx]
^^^^^^^^^^^^^
Did you mean?  rotate_array
               rotated_arr
        from test.rb:8:in `each'
        from test.rb:8:in `each_with_index'
        from test.rb:8:in `rotate_array'
        from test.rb:25:in `<main>'
raymond@Rays-Mac Launch_School % ruby test.rb                              
["", "", "", "", "", "\a\u0003\u0005\u0002\t\u0001"]
raymond@Rays-Mac Launch_School % ruby test.rb                              
["\u0001", "\t", "\u0002", "\u0005", "\u0003", "\a"]
raymond@Rays-Mac Launch_School % ruby test.rb                              
[1, 9, 2, 5, 3, 7]
raymond@Rays-Mac Launch_School % lear                                      
zsh: command not found: lear
raymond@Rays-Mac Launch_School % clear                                     
raymond@Rays-Mac Launch_School % lear                                      
zsh: command not found: lear
raymond@Rays-Mac Launch_School % clear                                     
raymond@Rays-Mac Launch_School % ruby test.rb                              
[1, 9, 2, 5, 3, 7]          
raymond@Rays-Mac Launch_School % ruby test.rb                              
["", "", "", "", "", ""]                   
[1, 9, 2, 5, 3, 7]                      
raymond@Rays-Mac Launch_School % ruby test.rb                              
<internal:/opt/homebrew/lib/ruby/site_ruby/3.2.0/rubygems/core_ext/kernel_r​‌​
equire.rb>:36:in `require': wrong number of arguments (given 0, expected 1)​‌​
 (ArgumentError)                         
        from test.rb:1:in `<main>'
raymond@Rays-Mac Launch_School % ruby test.rb                              
<internal:/opt/homebrew/lib/ruby/site_ruby/3.2.0/rubygems/core_ext/kernel_r​‌​
equire.rb>:36:in `require': wrong number of arguments (given 0, expected 1)​‌​
 (ArgumentError)          
        from test.rb:1:in `<main>'
raymond@Rays-Mac Launch_School % ls                                        
Course_1        Course_3        Login Shell     test.rb
Course_2        Exercises       README.md
raymond@Rays-Mac Launch_School % ls                                        
Course_1        Course_3        Login Shell     test.rb
Course_2        Exercises       README.md                                  
raymond@Rays-Mac Launch_School % ruby test.rb                              
<internal:/opt/homebrew/lib/ruby/site_ruby/3.2.0/rubygems/core_ext/kernel_r​‌​
equire.rb>:36:in `require': wrong number of arguments (given 0, expected 1)​‌​
 (ArgumentError)                                                           
        from test.rb:1:in `<main>'
raymond@Rays-Mac Launch_School % ruby test.rb                              

From: /Users/raymond/Launch_School/Launch_School/test.rb:11 Object#rotate_a​‌​
rray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: array_size.times { rotated_arr << ''}
     7: index = -1
     8: 
     9: arr_to_rotate.each_with_index do |item, idx|
    10: rotated_arr[index] = arr_to_rotate[idx]
 => 11: binding.pry
    12: index -= 1
    13: end
    14: 
    15: rotated_arr
    16: end

[1] pry(main)> item
=> 7
[2] pry(main)> exit-program
raymond@Rays-Mac Launch_School % ruby test.rb                              
raymond@Rays-Mac Launch_School % ruby test.rb                              
[3, nil, 5, 1, 2, nil]
raymond@Rays-Mac Launch_School % ruby test.rb                              
[3, nil, 5, 1, 2, nil]
raymond@Rays-Mac Launch_School % ruby test.rb                              

From: /Users/raymond/Launch_School/Launch_School/test.rb:11 Object#rotate_a​‌​
rray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: array_size.times { rotated_arr << ''}
     7: index = -1
     8: 
     9: arr_to_rotate.each_with_index do |item, idx|
    10: rotated_arr[index] = arr_to_rotate[item]
 => 11: binding.pry
    12: index -= 1
    13: end
    14: 
    15: p rotated_arr
    16: end

[1] pry(main)> item
=> 7
[2] pry(main)> exit

From: /Users/raymond/Launch_School/Launch_School/test.rb:11 Object#rotate_a​‌​
rray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: array_size.times { rotated_arr << ''}
     7: index = -1
     8: 
     9: arr_to_rotate.each_with_index do |item, idx|
    10: rotated_arr[index] = arr_to_rotate[item]
 => 11: binding.pry
    12: index -= 1
    13: end
    14: 
    15: p rotated_arr
    16: end

[1] pry(main)> item
=> 3
[2] pry(main)> exit

From: /Users/raymond/Launch_School/Launch_School/test.rb:11 Object#rotate_a​‌​
rray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: array_size.times { rotated_arr << ''}
     7: index = -1
     8: 
     9: arr_to_rotate.each_with_index do |item, idx|
    10: rotated_arr[index] = arr_to_rotate[item]
 => 11: binding.pry
    12: index -= 1
    13: end
    14: 
    15: p rotated_arr
    16: end

[1] pry(main)> rotated_arr                                                 
=> ["", "", "", 1, 2, nil]
[2] pry(main)> exit-program                                                
raymond@Rays-Mac Launch_School % ruby test.rb                              

From: /Users/raymond/Launch_School/Launch_School/test.rb:11 Object#rotate_a​‌​
rray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: 0.upto(array_size) { rotated_arr << ''}
     7: index = -1
     8: 
     9: arr_to_rotate.each_with_index do |item, idx|
    10: rotated_arr[index] = arr_to_rotate[item]
 => 11: binding.pry
    12: index -= 1
    13: end
    14: 
    15: p rotated_arr
    16: end

[1] pry(main)> rotate
NameError: undefined local variable or method `rotate' for main:Object
from (pry):1:in `block in rotate_array'
[2] pry(main)> rotated_arr
=> ["", "", "", "", "", "", nil]
[3] pry(main)> exit-program                                                
raymond@Rays-Mac Launch_School % ruby test.rb                              

From: /Users/raymond/Launch_School/Launch_School/test.rb:11 Object#rotate_a​‌​
rray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: 1.upto(array_size) { rotated_arr << ''}
     7: index = -1
     8: 
     9: arr_to_rotate.each_with_index do |item, idx|
    10: rotated_arr[index] = arr_to_rotate[item]
 => 11: binding.pry
    12: index -= 1
    13: end
    14: 
    15: p rotated_arr
    16: end

[1] pry(main)> rotated_arr
=> ["", "", "", "", "", nil]
[2] pry(main)> exit-program
raymond@Rays-Mac Launch_School % ruby test.rb                              

From: /Users/raymond/Launch_School/Launch_School/test.rb:11 Object#rotate_a​‌​
rray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: 0.upto(array_size) { rotated_arr << ''}
     7: index = -1
     8: 
     9: arr_to_rotate.each_with_index do |item, idx|
    10: rotated_arr[index] = arr_to_rotate[item]
 => 11: binding.pry
    12: index -= 1
    13: end
    14: 
    15: p rotated_arr
    16: end

[1] pry(main)> array_size
=> 6
[2] pry(main)> rotate
rotate_array  rotated_arr   
[2] pry(main)> rotated_arr
=> ["", "", "", "", "", "", nil]
[3] pry(main)> rotated_arr
=> ["", "", "", "", "", "", nil]
[4] pry(main)> exit-
exit-all      exit-program  
[4] pry(main)> exit-program
raymond@Rays-Mac Launch_School % ruby test.rb                              

From: /Users/raymond/Launch_School/Launch_School/test.rb:11 Object#rotate_a​‌​
rray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: array_size.times { rotated_arr << ''}
     7: index = -1
     8: 
     9: arr_to_rotate.each_with_index do |item, idx|
    10: rotated_arr[index] = arr_to_rotate[item]
 => 11: binding.pry
    12: index -= 1
    13: end
    14: 
    15: p rotated_arr
    16: end

[1] pry(main)> rotated_arr
=> ["", "", "", "", "", nil]
[2] pry(main)> exit-program
raymond@Rays-Mac Launch_School % ruby test.rb                              
test.rb: --> test.rb
Unmatched `end', missing keyword (`do', `def`, `if`, etc.) ?
>  1  require "pry"
>  3  def rotate_array(arr_to_rotate)
>  4  rotated_arr = []
>  5  array_size = arr_to_rotate.size
>  6  0.upto(array_size) { rotated_arr << '' }
>  7  index = -1
>  8  binding.pry
> 13  end
> 15  p rotated_arr
> 16  end

test.rb:16: syntax error, unexpected `end' (SyntaxError)
raymond@Rays-Mac Launch_School %                                           
raymond@Rays-Mac Launch_School % ruby test.rb                              

From: /Users/raymond/Launch_School/Launch_School/test.rb:8 Object#rotate_ar​‌​
ray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: 0.upto(array_size) { rotated_arr << '' }
     7: index = -1
 =>  8: binding.pry
     9: # arr_to_rotate.each_with_index do |item, idx|
    10: # rotated_arr[index] = arr_to_rotate[item]
    11: # binding.pry
    12: # index -= 1
    13: # end
    14: 
    15: p rotated_arr
    16: end

[1] pry(main)> rotated_arr
=> ["", "", "", "", "", "", ""]
[2] pry(main)> exit-program                                                
raymond@Rays-Mac Launch_School % ruby test.rb                              

From: /Users/raymond/Launch_School/Launch_School/test.rb:10 Object#rotate_a​‌​
rray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: 1.upto(array_size) { rotated_arr << '' }
     7: index = -1
     8: 
     9: arr_to_rotate.each_with_index do |item, idx|
 => 10: binding.pry
    11: rotated_arr[index] = arr_to_rotate[item]
    12: index -= 1
    13: end
    14: 
    15: p rotated_arr
    16: end

[1] pry(main)> rotated_arr
=> ["", "", "", "", "", ""]
[2] pry(main)> rotated_arr
rotated_arr
[2] pry(main)> rotated_arr[index]
=> ""
[3] pry(main)> arr_to_rotate                                               
=> [7, 3, 5, 2, 9, 1]
[4] pry(main)> arr_to_rotate[item]                                         
=> nil
[5] pry(main)> item                                                        
=> 7
[6] pry(main)> arr_to_rotate[item]
=> nil
[7] pry(main)> arr_to_rotate[idx]                                          
=> 7
[8] pry(main)> exit-program
raymond@Rays-Mac Launch_School % ruby test.rb                              

From: /Users/raymond/Launch_School/Launch_School/test.rb:10 Object#rotate_a​‌​
rray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: 1.upto(array_size) { rotated_arr << '' }
     7: index = -1
     8: 
     9: arr_to_rotate.each_with_index do |item, idx|
 => 10: binding.pry
    11: rotated_arr[index] = arr_to_rotate[idx]
    12: index -= 1
    13: end
    14: 
    15: p rotated_arr
    16: end

[1] pry(main)> rotated_arr
=> ["", "", "", "", "", ""]
[2] pry(main)> exit

From: /Users/raymond/Launch_School/Launch_School/test.rb:10 Object#rotate_a​‌​
rray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: 1.upto(array_size) { rotated_arr << '' }
     7: index = -1
     8: 
     9: arr_to_rotate.each_with_index do |item, idx|
 => 10: binding.pry
    11: rotated_arr[index] = arr_to_rotate[idx]
    12: index -= 1
    13: end
    14: 
    15: p rotated_arr
    16: end

[1] pry(main)> rotated_arr                                                 
=> ["", "", "", "", "", 7]
[2] pry(main)> exit

From: /Users/raymond/Launch_School/Launch_School/test.rb:10 Object#rotate_a​‌​
rray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: 1.upto(array_size) { rotated_arr << '' }
     7: index = -1
     8: 
     9: arr_to_rotate.each_with_index do |item, idx|
 => 10: binding.pry
    11: rotated_arr[index] = arr_to_rotate[idx]
    12: index -= 1
    13: end
    14: 
    15: p rotated_arr
    16: end

[1] pry(main)> rotated_arr
=> ["", "", "", "", 3, 7]
[2] pry(main)> rotated_arr
=> ["", "", "", "", 3, 7]
[3] pry(main)> item
=> 5
[4] pry(main)> exit

From: /Users/raymond/Launch_School/Launch_School/test.rb:10 Object#rotate_a​‌​
rray:

     3: def rotate_array(arr_to_rotate)
     4: rotated_arr = []
     5: array_size = arr_to_rotate.size
     6: 1.upto(array_size) { rotated_arr << '' }
     7: index = -1
     8: 
     9: arr_to_rotate.each_with_index do |item, idx|
 => 10: binding.pry
    11: rotated_arr[index] = arr_to_rotate[idx]
    12: index -= 1
    13: end
    14: 
    15: p rotated_arr
    16: end

[1] pry(main)> exit-program
raymond@Rays-Mac Launch_School % 